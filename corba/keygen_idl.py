# Python stubs generated by omniidl from keygen.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "KeyGen"
#
__name__ = "KeyGen"
_0_KeyGen = omniORB.openModule("KeyGen", r"keygen.idl")
_0_KeyGen__POA = omniORB.openModule("KeyGen__POA", r"keygen.idl")


# interface Generator
_0_KeyGen._d_Generator = (omniORB.tcInternal.tv_objref, "IDL:KeyGen/Generator:1.0", "Generator")
omniORB.typeMapping["IDL:KeyGen/Generator:1.0"] = _0_KeyGen._d_Generator
_0_KeyGen.Generator = omniORB.newEmptyClass()
class Generator :
    _NP_RepositoryId = _0_KeyGen._d_Generator[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_KeyGen.Generator = Generator
_0_KeyGen._tc_Generator = omniORB.tcInternal.createTypeCode(_0_KeyGen._d_Generator)
omniORB.registerType(Generator._NP_RepositoryId, _0_KeyGen._d_Generator, _0_KeyGen._tc_Generator)

# Generator operations and attributes
Generator._d_codeKey = (((omniORB.tcInternal.tv_string,0), ), ((omniORB.tcInternal.tv_string,0), ), None)
Generator._d_decodeKey = (((omniORB.tcInternal.tv_string,0), ), ((omniORB.tcInternal.tv_string,0), ), None)

# Generator object reference
class _objref_Generator (CORBA.Object):
    _NP_RepositoryId = Generator._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def codeKey(self, *args):
        return self._obj.invoke("codeKey", _0_KeyGen.Generator._d_codeKey, args)

    def decodeKey(self, *args):
        return self._obj.invoke("decodeKey", _0_KeyGen.Generator._d_decodeKey, args)

omniORB.registerObjref(Generator._NP_RepositoryId, _objref_Generator)
_0_KeyGen._objref_Generator = _objref_Generator
del Generator, _objref_Generator

# Generator skeleton
__name__ = "KeyGen__POA"
class Generator (PortableServer.Servant):
    _NP_RepositoryId = _0_KeyGen.Generator._NP_RepositoryId


    _omni_op_d = {"codeKey": _0_KeyGen.Generator._d_codeKey, "decodeKey": _0_KeyGen.Generator._d_decodeKey}

Generator._omni_skeleton = Generator
_0_KeyGen__POA.Generator = Generator
omniORB.registerSkeleton(Generator._NP_RepositoryId, Generator)
del Generator
__name__ = "KeyGen"

#
# End of module "KeyGen"
#
__name__ = "keygen_idl"

_exported_modules = ( "KeyGen", )

# The end.
